/*
 * Backend API
 * Backend API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * POST schedule
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addScheduleTest() throws ApiException {
        api.addSchedule();

        // TODO: test validations
    }
    
    /**
     * GET allInstructors
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void allInstructorsTest() throws ApiException {
        api.allInstructors();

        // TODO: test validations
    }
    
    /**
     * POST user/create
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        api.createUser();

        // TODO: test validations
    }
    
    /**
     * DELETE schedule/byId/{id}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteByIdTest() throws ApiException {
        BigDecimal id = null;
        api.deleteById(id);

        // TODO: test validations
    }
    
    /**
     * GET classes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllClassesTest() throws ApiException {
        api.getAllClasses();

        // TODO: test validations
    }
    
    /**
     * GET classes/{department}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllClassesByDepartmentTest() throws ApiException {
        String department = null;
        api.getAllClassesByDepartment(department);

        // TODO: test validations
    }
    
    /**
     * GET class/{department}/{number}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClassTest() throws ApiException {
        String department = null;
        String number = null;
        api.getClass(department, number);

        // TODO: test validations
    }
    
    /**
     * GET onlineUsers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOnlineUsersTest() throws ApiException {
        api.getOnlineUsers();

        // TODO: test validations
    }
    
    /**
     * GET schedule/byId/{id}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getScheduleTest() throws ApiException {
        BigDecimal id = null;
        api.getSchedule(id);

        // TODO: test validations
    }
    
    /**
     * GET schedules/byUserId/{userid}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSchedulesTest() throws ApiException {
        BigDecimal userid = null;
        api.getSchedules(userid);

        // TODO: test validations
    }
    
    /**
     * GET getUserById/{user}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserByIdTest() throws ApiException {
        BigDecimal user = null;
        api.getUserById(user);

        // TODO: test validations
    }
    
    /**
     * GET getUser/{user}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserByNameTest() throws ApiException {
        String user = null;
        api.getUserByName(user);

        // TODO: test validations
    }
    
    /**
     * GET getUserContactById/{user}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserContactByIdTest() throws ApiException {
        BigDecimal user = null;
        api.getUserContactById(user);

        // TODO: test validations
    }
    
    /**
     * GET getUserContact/{user}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserContactByNameTest() throws ApiException {
        String user = null;
        api.getUserContactByName(user);

        // TODO: test validations
    }
    
    /**
     * GET instructorClasses/{instructor}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void instructorClassesTest() throws ApiException {
        String instructor = null;
        api.instructorClasses(instructor);

        // TODO: test validations
    }
    
    /**
     * POST user/login
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void loginUserTest() throws ApiException {
        api.loginUser();

        // TODO: test validations
    }
    
    /**
     * POST user/logout
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void logoutTest() throws ApiException {
        api.logout();

        // TODO: test validations
    }
    
    /**
     * PUT user/manage
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void manageUserTest() throws ApiException {
        api.manageUser();

        // TODO: test validations
    }
    
    /**
     * POST class
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateClassTest() throws ApiException {
        api.updateClass();

        // TODO: test validations
    }
    
    /**
     * POST classes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateClassesTest() throws ApiException {
        api.updateClasses();

        // TODO: test validations
    }
    
}
